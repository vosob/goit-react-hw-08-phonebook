{"version":3,"file":"static/js/354.40ae2367.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/PhoneBookForm/PhoneBookForm.styled.js","redux/selectors.js","components/PhoneBookForm/PhoneBookForm.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  padding-top: 75px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FilterLabal = styled.label`\n  font-size: 18px;\n  display: inline-block;\n  width: 325px;\n  color: #2a2a2a;\n  font-weight: 600;\n`;\n\nexport const FilterInput = styled.input`\n  width: 325px;\n  display: block;\n  height: 35px;\n  margin-top: 5px;\n`;\n","import { FilterContainer, FilterInput, FilterLabal } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filterSlice.js';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n  return (\n    <FilterContainer>\n      <FilterLabal>\n        Find contacts by name:\n        <FilterInput\n          value={filter}\n          type=\"text\"\n          onChange={evt => dispatch(setFilter(evt.target.value))}\n        />\n      </FilterLabal>\n    </FilterContainer>\n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactsBookForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactContainer = styled.main`\n  padding-top: 75px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding-top: 25px;\n`;\n\nexport const ContactsBookInput = styled(Field)`\n  margin-left: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-right: 25px;\n  width: 325px;\n  height: 35px;\n  display: flex;\n`;\n\nexport const Text = styled.p`\n  padding-left: 20px;\n  font-size: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  color: #2a2a2a;\n  font-weight: 600;\n`;\n\nexport const SubmitBtn = styled.button`\n  width: 325px;\n  margin-left: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border: 2px solid black;\n  background-color: white;\n  color: #2a2a2a;\n  font-size: 18px;\n  font-weight: 700;\n  cursor: pointer;\n\n  &:disabled {\n    border-color: gray;\n    color: gray;\n  }\n`;\n\nexport const ValidationError = styled(ErrorMessage)`\n  margin-left: 20px;\n  color: red;\n`;\n","export const getContacts = state => state.contact.contacts.items;\nexport const getIsLoading = state => state.contact.contacts.isLoading;\nexport const getError = state => state.contact.contacts.error;\nexport const getFilter = state => state.contact.filter;\nexport const getState = state => state;\nexport const getName = state => state.contact.contacts.items;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ContactsBookForm,\n  Text,\n  ContactsBookInput,\n  SubmitBtn,\n  ValidationError,\n  Title,\n  ContactContainer,\n} from './PhoneBookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contactApi';\nimport { getIsLoading } from '../../redux/selectors';\n\nconst PhoneBookSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short!').required('This field is required!'),\n  number: Yup.string()\n    .min(6, 'Too short!')\n    .max(9, 'Too long!')\n    .required('This field is required!'),\n});\n\nexport const PhoneBookForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const contacts = useSelector(state => state.contact.contacts.items);\n\n  return (\n    <>\n      <Title>Your PHONE BOOK</Title>\n      <ContactContainer>\n        <Formik\n          initialValues={{\n            name: '',\n            number: '',\n          }}\n          validationSchema={PhoneBookSchema}\n          onSubmit={(value, helper) => {\n            const isAdded = contacts.some(\n              contact =>\n                contact.name.toLowerCase() === value.name.toLowerCase() ||\n                contact.number === value.number\n            );\n\n            if (isAdded) {\n              alert('The contact is already in contacts!');\n              return;\n            } else {\n              dispatch(addContact(value));\n            }\n\n            helper.resetForm({\n              values: {\n                name: '',\n                number: '',\n              },\n            });\n          }}\n        >\n          <ContactsBookForm>\n            <label>\n              <Text>Name:</Text>\n              <ContactsBookInput name=\"name\" placeholder=\"Vlad\" />\n              <ValidationError name=\"name\" component=\"span\" />\n            </label>\n\n            <label>\n              <Text> Number:</Text>\n              <ContactsBookInput\n                type=\"text\"\n                name=\"number\"\n                placeholder=\"111-11-11\"\n              />\n              <ValidationError name=\"number\" component=\"span\" />\n            </label>\n            <SubmitBtn disabled={isLoading} type=\"submit\">\n              Add contact\n            </SubmitBtn>\n          </ContactsBookForm>\n        </Formik>\n      </ContactContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* margin-top: 5px;\n  padding-left: 20px; */\n`;\nexport const ListItem = styled.li`\n  list-style: none;\n  padding-bottom: 5px;\n  font-size: 16px;\n  font-weight: 500;\n  width: 325px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const DelBtn = styled.button`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border: 2px solid black;\n  background-color: white;\n  color: #2a2a2a;\n  font-size: 18px;\n  font-weight: 700;\n  cursor: pointer;\n  &:disabled {\n    color: gray;\n    border-color: gray;\n  }\n`;\n\nexport const ContactContainer = styled.div`\n  padding-top: 25px;\n  display: flex;\n  justify-content: center;\n`;\n","import { List, ListItem, DelBtn, ContactContainer } from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from '../../redux/contactApi';\nimport { useEffect, useMemo } from 'react';\nimport { getIsLoading } from '../../redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const contacts = useSelector(state => state.contact.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const filter = useSelector(state => state.filter.filter);\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  }, [contacts, filter]);\n\n  return (\n    <>\n      <ContactContainer>\n        <List>\n          {filteredContacts.map(({ name, id, number, phone }) => (\n            <ListItem key={id}>\n              {name} {number}\n              <DelBtn\n                disabled={isLoading}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </DelBtn>\n            </ListItem>\n          ))}\n        </List>\n      </ContactContainer>\n    </>\n  );\n};\n\nexport default Contacts;\n","import Filter from 'components/Filter/Filter';\nimport { PhoneBookForm } from 'components/PhoneBookForm/PhoneBookForm';\nimport Contacts from '../../components/Contacts/Contacts';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <PhoneBookForm />\n      <Filter />\n      <Contacts />\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["FilterContainer","styled","FilterLabal","FilterInput","dispatch","useDispatch","filter","useSelector","state","value","type","onChange","evt","setFilter","target","ContactsBookForm","Form","ContactContainer","Title","ContactsBookInput","Field","Text","SubmitBtn","ValidationError","ErrorMessage","getIsLoading","contact","contacts","isLoading","PhoneBookSchema","Yup","shape","name","min","required","number","max","PhoneBookForm","items","initialValues","validationSchema","onSubmit","helper","some","toLowerCase","alert","addContact","resetForm","values","placeholder","component","disabled","List","ListItem","DelBtn","useEffect","fetchContacts","filteredContacts","useMemo","includes","trim","map","id","phone","onClick","deleteContact"],"sourceRoot":""}