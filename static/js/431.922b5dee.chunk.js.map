{"version":3,"file":"static/js/431.922b5dee.chunk.js","mappings":"mOAGaA,EAAOC,EAAAA,GAAAA,EAAH,sJASJC,EAAQD,EAAAA,GAAAA,GAAH,qEAKLE,GAAeF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uGAMZI,GAAkBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6DAKfM,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,oKAULQ,EAAYR,EAAAA,GAAAA,OAAH,oTAkBTS,EAAoBT,EAAAA,GAAAA,KAAH,4F,uCC1CxBU,EAAiBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,aAAaC,SAAS,2BAChDC,MAAOL,EAAAA,KACJK,MAAM,yBACND,SAAS,2BACZE,SAAUN,EAAAA,KACPO,QAAQ,WAAY,4CACpBH,SAAS,6BAmEd,EAhEqB,WACnB,IAAMI,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,SAACnB,EAAD,mCACA,SAACQ,EAAD,WACE,SAAC,KAAD,CACEY,cAAe,CACbR,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZK,iBAAkBZ,EAClBa,SAAU,SAACC,EAAOC,GAChB,IAAQZ,EAA0BW,EAA1BX,KAAMG,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,SACrBE,GAASO,EAAAA,EAAAA,IAAS,CAAEb,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KAEjCU,QAAQC,IAAI,OAAQJ,GAEpBC,EAAOI,UAAU,CACfC,OAAQ,CACNjB,KAAM,GACNG,MAAO,GACPC,SAAU,KAGf,EApBH,UAsBE,UAACf,EAAD,YACE,8BACE,SAACH,EAAD,0BACA,SAACO,EAAD,CAAOyB,KAAK,OAAOlB,KAAK,OAAOmB,YAAY,gBAC3C,SAAC5B,EAAD,CAAiBS,KAAK,OAAOoB,UAAU,aAGzC,8BACE,SAAClC,EAAD,sBACA,SAACO,EAAD,CACEyB,KAAK,QACLlB,KAAK,QACLmB,YAAY,uBAEd,SAAC5B,EAAD,CAAiBS,KAAK,QAAQoB,UAAU,aAG1C,8BACE,SAAClC,EAAD,yBACA,SAACO,EAAD,CACEyB,KAAK,WACLlB,KAAK,WACLmB,YAAY,uBAEd,SAAC5B,EAAD,CAAiBS,KAAK,WAAWoB,UAAU,aAG7C,SAACzB,EAAD,CAAWuB,KAAK,SAAhB,qCAMX,C","sources":["pages/Register/Register.styled.js","pages/Register/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Text = styled.p`\n  padding-left: 20px;\n  font-size: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  color: #2a2a2a;\n  font-weight: 600;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding-top: 25px;\n`;\n\nexport const RegisterForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n`;\n\nexport const ValidationError = styled(ErrorMessage)`\n  margin-left: 20px;\n  color: red;\n`;\n\nexport const Input = styled(Field)`\n  margin-left: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-right: 25px;\n  width: 325px;\n  height: 35px;\n  display: flex;\n`;\n\nexport const SubmitBtn = styled.button`\n  width: 325px;\n  margin-left: 20px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border: 2px solid black;\n  background-color: white;\n  color: #2a2a2a;\n  font-size: 18px;\n  font-weight: 700;\n  cursor: pointer;\n\n  &:disabled {\n    border-color: gray;\n    color: gray;\n  }\n`;\n\nexport const RegisterContainer = styled.main`\n  padding-top: 75px;\n  display: flex;\n  justify-content: center;\n`;\n","import { Formik } from 'formik';\nimport {\n  Text,\n  Title,\n  ValidationError,\n  Input,\n  SubmitBtn,\n  RegisterForm,\n  RegisterContainer,\n} from './Register.styled';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'To short!').required('This field is required!'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('This field is required!'),\n  password: Yup.string()\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.')\n    .required('This field is required!'),\n});\n\nconst FormRegister = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Title>Sign up to continue</Title>\n      <RegisterContainer>\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          validationSchema={RegisterSchema}\n          onSubmit={(value, helper) => {\n            const { name, email, password } = value;\n            dispatch(register({ name, email, password }));\n\n            console.log('form', value);\n\n            helper.resetForm({\n              values: {\n                name: '',\n                email: '',\n                password: '',\n              },\n            });\n          }}\n        >\n          <RegisterForm>\n            <label>\n              <Text>User name:</Text>\n              <Input type=\"text\" name=\"name\" placeholder=\"ExampleBoy\" />\n              <ValidationError name=\"name\" component=\"span\" />\n            </label>\n\n            <label>\n              <Text>Email:</Text>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"example@gmail.com\"\n              />\n              <ValidationError name=\"email\" component=\"span\" />\n            </label>\n\n            <label>\n              <Text>Password:</Text>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"BestPassInWorld24\"\n              />\n              <ValidationError name=\"password\" component=\"span\" />\n            </label>\n\n            <SubmitBtn type=\"submit\">Create account</SubmitBtn>\n          </RegisterForm>\n        </Formik>\n      </RegisterContainer>\n    </>\n  );\n};\n\nexport default FormRegister;\n"],"names":["Text","styled","Title","RegisterForm","Form","ValidationError","ErrorMessage","Input","Field","SubmitBtn","RegisterContainer","RegisterSchema","Yup","shape","name","min","required","email","password","matches","dispatch","useDispatch","initialValues","validationSchema","onSubmit","value","helper","register","console","log","resetForm","values","type","placeholder","component"],"sourceRoot":""}